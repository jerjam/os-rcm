/*** BeginHeader */
#ifndef __GPSTS_TLN_ORDERS_LIB
#define __GPSTS_TLN_ORDERS_LIB
/*** EndHeader */

//_____________________________<LIBRARIES>______________________________________
/*** BeginHeader */
#use "GPSTS_TLN_HEADER.LIB"
/*** EndHeader */
//_____________________________</LIBRARIES>_____________________________________


/*** BeginHeader
GPSTS_SCPI_Ord_Exe,
*/

//_____________________________<FUNCTIONS>______________________________________
int GPSTS_SCPI_Ord_Exe(struct SYSVarOrd * sys_tlnOrd);
//_____________________________</FUNCTIONS>______________________________________
/*** EndHeader */


//------------------------------------------------------------------------------
//Start System

 //******************************************************************************
_GPSTS_NODEBUG
void LOC_2Tln_Ack(int tlnOrdNo)
{
char buf[128];

SYS_Tln_Write(SCPI_ACKNW);
SYS_Tln_Write(":");
SYS_2DimTo1Dim(buf,GPSTS_SCPI_REF[tlnOrdNo].Tree,':');
SYS_Tln_Write(buf);
SYS_Tln_Write(SYSCRNL);
}
//******************************************************************************
_GPSTS_NODEBUG
int SYSTem_HEADers_Q_Exe(struct SYSVarOrd * sys_tlnOrd)                      	       //OK
{
int i,j,no;
char buf[16];
LOC_2Tln_Ack(sys_tlnOrd->No);

SYS_Tln_Write("<REQUESTS>");SYS_Tln_Write(SYSCRNL);
for(i=0,no=0; GPSTS_SCPI_REF[i].Tree[0][0]!=SYSVarOrd_REF_NULL.Tree[0][0]; i++)
{
if( (GPSTS_SCPI_REF[i].Tree[0][0]!=0) && (GPSTS_SCPI_REF[i].Attribute!=SYS_At_Hidden) )
//if(GPSTS_SCPI_REF[i].Tree[0][0]!=0)
 {
 no++;
 sprintf(buf,"%4d ",no);
 SYS_Tln_Write(buf);

	for(j=0;GPSTS_SCPI_REF[i].Tree[j][0]!=0;j++)
   	{
   	SYS_Tln_Write(":");
   	SYS_Tln_Write(&GPSTS_SCPI_REF[i].Tree[j][0]);
   	}
	SYS_Tln_Write(" / Params=<");
	if(GPSTS_SCPI_REF[i].Param[0]>0)
 	{
 	for(j=0;GPSTS_SCPI_REF[i].Param[j]>0;j++)
		{
   	sprintf(buf,"%d-el",GPSTS_SCPI_REF[i].Param[j]);
      SYS_Tln_Write(buf);
      SYS_Tln_Write(&GPSTS_SCPI_REF[i].Unit[j][0]);
   	if(GPSTS_SCPI_REF[i].Param[j+1]>0) SYS_Tln_Write(",");
      else SYS_Tln_Write(">");
   	}
 	}
	else SYS_Tln_Write("NULL>");

	SYS_Tln_Write(SYSCRNL);
 }
}
SYS_Tln_Write("</REQUESTS>");SYS_Tln_Write(SYSCRNL);

SYS_Tln_Write("<EVENTS>");SYS_Tln_Write(SYSCRNL);
for(i=0,no=0;i<(sizeof(GPSTS_TLN_EVENT)/sizeof(GPSTS_TLN_EVENT[0]));i++)
	{
 	no++;
 	sprintf(buf,"%4d ",no);
 	SYS_Tln_Write(buf);
	SYS_Tln_Write(&GPSTS_TLN_EVENT[i][0]);SYS_Tln_Write(SYSCRNL);
	}
SYS_Tln_Write("</EVENTS>");SYS_Tln_Write(SYSCRNL);

SYSOrd_Release(sys_tlnOrd);
return 1;
}
//******************************************************************************
_GPSTS_NODEBUG
int SYST_TIM_Q_Exe(struct SYSVarOrd * sys_tlnOrd)
{
char buf[100];

LOC_2Tln_Ack(sys_tlnOrd->No);
SYS_RTC_Print(buf,SYS_RTC_Read());
SYS_Tln_Write(buf);
SYS_Tln_Write("(GMT+00:00)");
SYS_Tln_Write(SYSCRNL);

SYSOrd_Release(sys_tlnOrd);
return 1;
}
//******************************************************************************
_GPSTS_NODEBUG
int SYST_UTCS_Q_Exe(struct SYSVarOrd * sys_tlnOrd)
{
char buf[32];
LOC_2Tln_Ack(sys_tlnOrd->No);

if(SYS_RTC_isCorrect()==1)
	SYS_Int32ToStr(buf,SYS_RTC_UTC1900_Read());
else sprintf(buf,"0");

SYS_Tln_Write(buf);
SYS_Tln_Write("[s](UTC1900y)");
SYS_Tln_Write(SYSCRNL);

SYSOrd_Release(sys_tlnOrd);
return 1;
}
//******************************************************************************
_GPSTS_NODEBUG
int SYST_SNUM_Q_Exe(struct SYSVarOrd * sys_tlnOrd)
{
char buf[100];

LOC_2Tln_Ack(sys_tlnOrd->No);
sprintf(buf,"%d",GPSTS_SNO);
SYS_Tln_Write(buf);
SYS_Tln_Write(SYSCRNL);

SYSOrd_Release(sys_tlnOrd);
return 1;
}
//******************************************************************************
_GPSTS_NODEBUG
int SYST_VERS_Q_Exe(struct SYSVarOrd * sys_tlnOrd)
{
LOC_2Tln_Ack(sys_tlnOrd->No);
SYS_Tln_Write(Firmware);
SYS_Tln_Write(SYSCRNL);

SYSOrd_Release(sys_tlnOrd);
return 1;
}
//******************************************************************************
_GPSTS_NODEBUG
int SYST_TELN_ACT_Q_Exe(struct SYSVarOrd *sys_tlnOrd)
{
LOC_2Tln_Ack(sys_tlnOrd->No);

SYSOrd_Release(sys_tlnOrd);
return 1;
}
//******************************************************************************
_GPSTS_NODEBUG
int SYST_SNTP_HOST_CHAN_Exe(struct SYSVarOrd * sys_tlnOrd)
{
char buf[ETH_IP4_MAX_LEN+1];
char buf2D[2][SYS_ETH_IP4_MAX_LEN+1];
LOC_2Tln_Ack(sys_tlnOrd->No);

SYS_DAlloc_Xmem2Root(buf,sys_tlnOrd->Param,sys_tlnOrd->ParamLen);

SYS_Array_1Dto2D(&buf2D[0][0],buf,SYS_ETH_IP4_MAX_LEN+1);

if(atoi(&buf2D[0][0])==0)
	GPSTS_SNTP_Serv_IP_Set(&buf2D[1][0]);
else
	{
   GPSTS_SNTP_Serv_IP_Set(&buf2D[1][0]);
   SYS_SFlash_Str2FlPage(&buf2D[1][0],SYS_SFl_IP_StrPage);
   }

SYSOrd_Release(sys_tlnOrd);
return 1;
}
//******************************************************************************
_GPSTS_NODEBUG
int SYST_SNTP_HOST_Q_Exe(struct SYSVarOrd * sys_tlnOrd)
{
LOC_2Tln_Ack(sys_tlnOrd->No);

SYS_Tln_Write(GPSTS_SNTP_Serv_IP_Get());
SYS_Tln_Write(SYSCRNL);

SYSOrd_Release(sys_tlnOrd);
return 1;
}

//******************************************************************************
_GPSTS_NODEBUG
int SYST_TELN_CLOS_Exe(struct SYSVarOrd * sys_tlnOrd)
{
LOC_2Tln_Ack(sys_tlnOrd->No);

SYS_Tln_Close();

SYSOrd_Release(sys_tlnOrd);
return 1;
}

//******************************************************************************
_GPSTS_NODEBUG
int SYST_TELN_WDOG_Q_Exe(struct SYSVarOrd * sys_tlnOrd)
{
char buf[32];
LOC_2Tln_Ack(sys_tlnOrd->No);

sprintf(buf,"%d[s]",SYS_Tln_getWatchdog());

SYS_Tln_Write(buf);
SYS_Tln_Write(SYSCRNL);

SYSOrd_Release(sys_tlnOrd);
return 1;
}

//******************************************************************************
_GPSTS_NODEBUG
int SYST_TELN_WDOG_Exe(struct SYSVarOrd * sys_tlnOrd)
{
char buf[32];
char buf2D[2][32];
LOC_2Tln_Ack(sys_tlnOrd->No);

SYS_DAlloc_Xmem2Root(buf,sys_tlnOrd->Param,sys_tlnOrd->ParamLen);
SYS_Array_1Dto2D(&buf2D[0][0],buf,32);

SYS_Tln_setWatchdog(atoi(&buf2D[0][0]),atol(&buf2D[1][0]));

SYSOrd_Release(sys_tlnOrd);
return 1;
}

//******************************************************************************
_GPSTS_NODEBUG
int SYST_TELN_MAC_Q_Exe(struct SYSVarOrd * sys_tlnOrd)
{
char buf[32];

LOC_2Tln_Ack(sys_tlnOrd->No);

SYS_MAC(buf,':');
SYS_Tln_Write(buf);
SYS_Tln_Write(SYSCRNL);

SYSOrd_Release(sys_tlnOrd);
return 1;
}
//******************************************************************************
_GPSTS_NODEBUG
int STAT_QUES_Q_Exe(struct SYSVarOrd * sys_tlnOrd)
{
char buf[256];

LOC_2Tln_Ack(sys_tlnOrd->No);

sprintf(buf," Syn?| RTC?| ETH?| PPS?\r\n%5d|%5d|%5d|%5d",
BIT(&STAT_VECT,GPS_StatVectBit_SYNCH),
SYS_RTC_isCorrect(),
SYS_Eth_isLink(),
BIT(&STAT_VECT,GPS_StatVectBit_PPS));

SYS_Tln_Write(buf);
SYS_Tln_Write(SYSCRNL);

SYSOrd_Release(sys_tlnOrd);
return 1;
}
//GPSTS_SNTP_Serv_Set
//******************************************************************************
_GPSTS_NODEBUG
int SYST_ERR_SYNT(void)
{
SYS_Tln_Write(SCPI_Syntax_Error);
SYS_Tln_Write(SYSCRNL);
return 0;
}
//******************************************************************************
int STAT_CRED_Q_Exe(struct SYSVarOrd * sys_tlnOrd)
{
LOC_2Tln_Ack(sys_tlnOrd->No);

SYS_Tln_Write("CELLS - ALBA");
SYS_Tln_Write(SYSCRNL);
SYS_Tln_Write("Computing & Control Division");
SYS_Tln_Write(SYSCRNL);
SYS_Tln_Write("Web Page: http://www.cells.es/");
SYS_Tln_Write(SYSCRNL);
SYS_Tln_Write("Project Design:");
SYS_Tln_Write(SYSCRNL);
SYS_Tln_Write("  O. Matilla");
SYS_Tln_Write(SYSCRNL);
SYS_Tln_Write("  J. Jamroz");
SYS_Tln_Write(SYSCRNL);
SYS_Tln_Write("Approval:");
SYS_Tln_Write(SYSCRNL);
SYS_Tln_Write("  D. Beltran");

SYS_Tln_Write(SYSCRNL);

SYS_Tln_Write("Final Release: ");
SYS_Tln_Write(__DATE__);
SYS_Tln_Write(" , ");
SYS_Tln_Write(__TIME__);
SYS_Tln_Write(SYSCRNL);

SYSOrd_Release(sys_tlnOrd);
return 1;
}

//********************EXE METHOD************************************************
_GPSTS_NODEBUG
int GPSTS_SCPI_Ord_Exe(struct SYSVarOrd * sys_tlnOrd)
{
int i;

if (sys_tlnOrd[0].ID<0)
   {
   SYST_ERR_SYNT();
   return 0;
   }

for(i=0;sys_tlnOrd[i].ID!=SYSVarOrd_REF_NULL.SYSVarOrdRef.ID;i++)
{

	switch (sys_tlnOrd[i].ID)
	{
	//------------------------------------------------------------------------------
	//Start System
	case SYST_HEAD_Q :
	SYSTem_HEADers_Q_Exe(&sys_tlnOrd[i]);
	break;

	case SYST_TIM_Q :
   SYST_TIM_Q_Exe(&sys_tlnOrd[i]);
	break;

   case SYST_UTCS_Q :
   SYST_UTCS_Q_Exe(&sys_tlnOrd[i]);
	break;

	case SYST_SNUM_Q :
   SYST_SNUM_Q_Exe(&sys_tlnOrd[i]);
	break;

	case SYST_VERS_Q :
	SYST_VERS_Q_Exe(&sys_tlnOrd[i]);
	break;

	case SYST_TELN_ACT_Q :
   SYST_TELN_ACT_Q_Exe(&sys_tlnOrd[i]);
	break;

	case SYST_SNTP_HOST_CHAN :
   SYST_SNTP_HOST_CHAN_Exe(&sys_tlnOrd[i]);
	break;

	case SYST_SNTP_HOST_Q :
   SYST_SNTP_HOST_Q_Exe(&sys_tlnOrd[i]);
	break;

	case SYST_TELN_CLOS :
   SYST_TELN_CLOS_Exe(&sys_tlnOrd[i]);
	break;

	case SYST_TELN_WDOG_Q :
   SYST_TELN_WDOG_Q_Exe(&sys_tlnOrd[i]);
	break;

	case SYST_TELN_WDOG :
	SYST_TELN_WDOG_Exe(&sys_tlnOrd[i]);
	break;

	case SYST_TELN_MAC_Q :
   SYST_TELN_MAC_Q_Exe(&sys_tlnOrd[i]);
	break;

	//Start STATus
	case STAT_QUES_Q :
   STAT_QUES_Q_Exe(&sys_tlnOrd[i]);
	break;
	//Telnet subsystem

	//Start CONTrol
	//Start CONTrol

	//Start HIDDen
	case STAT_CRED_Q :
   STAT_CRED_Q_Exe(&sys_tlnOrd[i]);
	break;
	//Stop HIDDen
   default:
	SYST_ERR_SYNT();
	}

}

//sys_tlnOrd[0]=SYSVarOrd_NULL;
return 0;
}

/*** BeginHeader */
#endif
/*** EndHeader */